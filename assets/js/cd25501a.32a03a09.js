"use strict";(self.webpackChunkkarunjosyin=self.webpackChunkkarunjosyin||[]).push([[8176],{8119:(e,n,t)=>{t.r(n),t.d(n,{Highlight:()=>a,assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=t(4848),s=t(8453);const r={},i=void 0,l={id:"CephBox/CephBox - DIY setup/Setup Ente Photos app",title:"Setup Ente Photos app",description:"Ente Photos  app is a fully open source, end-to-end encrypted platform  to store your photos(an open source alternative to Apple and Google Photos).Ente photos can be also used to Self-host and integrate with any S3 compatible storage platform like Ceph RGW.",source:"@site/docs/CephBox/CephBox - DIY setup/Setup Ente Photos app.md",sourceDirName:"CephBox/CephBox - DIY setup",slug:"/CephBox/CephBox - DIY setup/Setup Ente Photos app",permalink:"/docs/CephBox/CephBox - DIY setup/Setup Ente Photos app",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installing Ceph Cluster",permalink:"/docs/CephBox/CephBox - DIY setup/Installing Ceph Cluster"},next:{title:"Setup Nextcloud with Ceph RGW",permalink:"/docs/CephBox/CephBox - DIY setup/Setup Nextcloud with Ceph RGW"}},d={},a=({children:e,color:n})=>(0,o.jsx)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"},children:e}),c=[{value:"Ente desktop app and mobile app",id:"ente-desktop-app-and-mobile-app",level:2},{value:"Deploying Ente Musuem server with Postgress",id:"deploying-ente-musuem-server-with-postgress",level:2},{value:"Additional settings for better user experience",id:"additional-settings-for-better-user-experience",level:2},{value:"Modify encryption keys from the default random provided",id:"modify-encryption-keys-from-the-default-random-provided",level:4},{value:"Hard-coded OTP",id:"hard-coded-otp",level:4},{value:"Increase storage space for the users",id:"increase-storage-space-for-the-users",level:4}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/ente-io/ente",children:"Ente Photos"}),"  app is a fully open source, end-to-end encrypted platform  to store your photos(an open source alternative to Apple and Google Photos).Ente photos can be also used to ",(0,o.jsx)(n.a,{href:"https://help.ente.io/self-hosting/",children:"Self-host"})," and integrate with any S3 compatible storage platform like Ceph RGW."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Huge shout-out to the Ente team for their awesomeness!"})}),"\n",(0,o.jsx)(n.p,{children:"We are using Ente Photos app to store our photos integrating with the Ceph Cluster that we have built."}),"\n",(0,o.jsx)(n.p,{children:"Okay, now here are some bare minimum basics of Ente architecture to get started."}),"\n",(0,o.jsx)(n.p,{children:"There are three major Components in Ente platform:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Ente desktop and mobile app"})," --\x3e This is the user interface"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Ente Musuem server with Postgress"})," --\x3e Stateless API server which manages the access of data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Ceph RGW external"})," --\x3e This is where the actual data is stored in S3 buckets"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"For the uploads to work, all three of them need to be able to reach each other. This is because the client uploads directly to the object storage. The interaction goes something like this:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Client wants to upload, it asks museum where it should upload to."}),"\n",(0,o.jsx)(n.li,{children:"Museum creates pre-signed URLs for the S3 bucket that was configured."}),"\n",(0,o.jsx)(n.li,{children:"Client directly uploads to the S3 buckets using these URLs."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Read more about Museum and Ente architecture ",(0,o.jsx)(n.a,{href:"https://help.ente.io/self-hosting/guides/configuring-s3",children:"here"})]}),"\n",(0,o.jsx)(n.h2,{id:"ente-desktop-app-and-mobile-app",children:"Ente desktop app and mobile app"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["You can download and install the desktop app from their official ",(0,o.jsx)(n.a,{href:"https://ente.photos/",children:"website"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["To use it in your mobile phone, you can install the android app from ",(0,o.jsx)(n.a,{href:"https://play.google.com/store/apps/details?id=io.ente.photos&hl=en_IN",children:"playstore"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["By default if you login, the app will connect to Ente's production server endpoint which is not what we want.\nFor self-hosting, we need to provide our local endpoint. Now here is the trick;\n",(0,o.jsxs)(a,{color:"#106b51",children:[(0,o.jsx)(n.strong,{children:"tap 7 times on the onboarding screen"})," "]})," and  to bring up developer settings\npage where you can configure the endpoint the app should be connecting to."]}),"\n",(0,o.jsx)("img",{src:"/img/ente_developer_page.png",alt:"Sample Image",width:"500",height:"300"}),"\n",(0,o.jsx)(n.h2,{id:"deploying-ente-musuem-server-with-postgress",children:"Deploying Ente Musuem server with Postgress"}),"\n",(0,o.jsx)(n.admonition,{title:"Info:",type:"note",children:(0,o.jsxs)(n.p,{children:["There are couple of different ways to install Ente server as documented ",(0,o.jsx)(n.a,{href:"https://github.com/ente-io/ente/blob/main/server/RUNNING.md",children:"here"}),".  We are using ",(0,o.jsx)(n.a,{href:"https://github.com/ente-io/ente/blob/main/server/docs/docker.md",children:"published Docker image"})," method."]})}),"\n",(0,o.jsx)(n.p,{children:"Steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"In one of the Raspberry Pi machine create a directory where you'll run Ente"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"# mkdir ente && cd ente\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Copy the starter ",(0,o.jsx)(n.em,{children:"compose.yaml"})," and  its support files from the repository onto your directory. You can do it by hand, or use (e.g.) curl"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"> compose.yaml\n# curl -LO https://raw.githubusercontent.com/karunjosy/CephBox/refs/heads/main/ente_with_ceph/compose.yaml\n\n# mkdir -p scripts/compose\n# cd scripts/compose\n\n> scripts/compose/credentials.yaml\n# curl -LO https://raw.githubusercontent.com/karunjosy/CephBox/refs/heads/main/ente_with_ceph/credentials.yaml\n\n# cd ../..\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,o.jsxs)(n.p,{children:["The above files are customized to get Musuem server running with Ceph as backend.\nRead more about these services ",(0,o.jsx)(n.a,{href:"https://github.com/ente-io/ente/blob/main/server/docs/docker.md",children:"here"})]})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Here is a sample for compose.yaml"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'services:\n  museum:\n    image: ghcr.io/ente-io/server\n    ports:\n      - 8080:8080 # API\n      - 2112:2112 # Prometheus metrics\n    depends_on:\n      postgres:\n        condition: service_healthy\n    environment:\n      # Pass-in the config to connect to the DB and MinIO\n      ENTE_CREDENTIALS_FILE: /credentials.yaml\n    volumes:\n      - custom-logs:/var/logs\n      - ./museum.yaml:/museum.yaml:ro\n      - ./scripts/compose/credentials.yaml:/credentials.yaml:ro\n      - ./data:/data:ro\n    networks:\n      - internal\n\n  postgres:\n    image: postgres:15\n    ports:\n      - 5432:5432\n    environment:\n      POSTGRES_USER: pguser\n      POSTGRES_PASSWORD: pgpass\n      POSTGRES_DB: ente_db\n    # Wait for postgres to be accept connections before starting museum.\n    healthcheck:\n      test:\n        [\n          "CMD",\n          "pg_isready",\n          "-q",\n          "-d",\n          "ente_db",\n          "-U",\n          "pguser"\n        ]\n      start_period: 40s\n      start_interval: 1s\n    volumes:\n      - postgres-data:/var/lib/postgresql/data\n    networks:\n      - internal\nvolumes:\n  custom-logs:\n  postgres-data:\n  \n\n\nnetworks:\n  internal:\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"scripts/compose/credentials.yaml sample:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"db:\n    host: postgres\n    port: 5432\n    name: ente_db\n    user: pguser\n    password: pgpass\n\ns3:\n    are_local_buckets: true\n    b2-eu-cen:\n        key: <access_key>\n        secret: <secret_key>\n        endpoint: 10.x.x.x:80 \n        region: eu-central-2\n            bucket: test\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Edit the credentials.yaml to add the ceph RGW endpoint and bucket details. You may also edit the postgres password."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Install docker and docker-compose if not present"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"docker-compose :"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'# apt install docker.io -y; \ncurl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose; chmod +x /usr/local/bin/docker-compose \n\n#docker-compose --version\nDocker Compose version v2.29.7\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"docker engine install"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'# apt install ca-certificates curl gnupg;\ninstall -m 0755 -d /etc/apt/keyrings;\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg;\n sudo chmod a+r /etc/apt/keyrings/docker.gpg;\necho "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null;\napt update;\napt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin;\ndocker version\n\n Version:           27.3.1\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Create RGW user and bucket. You may refer the steps ",(0,o.jsx)(n.a,{href:"http://karunjosyin.github.com",children:"here"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Set CORS for the bucket created"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Create cors.xml file"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"<CORSConfiguration>\n    <CORSRule>\n        <AllowedOrigin>*</AllowedOrigin>\n        <AllowedMethod>GET</AllowedMethod>\n        <AllowedMethod>HEAD</AllowedMethod>\n        <AllowedMethod>POST</AllowedMethod>\n        <AllowedMethod>PUT</AllowedMethod>\n        <AllowedMethod>DELETE</AllowedMethod>\n        <AllowedHeader>*</AllowedHeader>\n        <ExposeHeader>Etag</ExposeHeader>\n        <MaxAgeSeconds>3000</MaxAgeSeconds>\n    </CORSRule>\n</CORSConfiguration>\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"apply it to the bucket using s3cmd"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"s3cmd setcors cors.xml s3://test\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Note : To install s3cmd client refer ",(0,o.jsx)(n.a,{href:"https://karunjosy.github.io/docs/CephBox/CephBox%20-%20DIY%20setup/Troubleshooting%20Doc#install-s3cmd-to-set-cors",children:"here"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["compose.yaml starts museum and postgress containers by pulling container images.\nFrom the ",(0,o.jsx)(n.em,{children:"ente"})," directory run"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker-compose up\n"})}),"\n",(0,o.jsx)(n.p,{children:"or if you want to run the process in background"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"nohup docker-compose up &\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Open the mobile or desktop app and tap 7 times and enter the endpoint"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"https://<IP>:8080\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Create an account and upload your first photo!"}),"\n",(0,o.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,o.jsxs)(n.p,{children:["You will get the OTP send to the email ID from the museum container log.\nTo create and manage accounts, refer ",(0,o.jsx)(n.a,{href:"https://karunjosy.github.io/docs/CephBox/CephBox%20-%20DIY%20setup/Setup%20Ente%20Photos%20app#additional-settings-for-better-user-experience",children:"here"})]})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"additional-settings-for-better-user-experience",children:"Additional settings for better user experience"}),"\n",(0,o.jsx)(n.p,{children:"If you have reached here, it means you will have a working setup to test around. But if you are planning to use it for real, we need to do some additional settings, mainly"}),"\n",(0,o.jsx)(n.h4,{id:"modify-encryption-keys-from-the-default-random-provided",children:"Modify encryption keys from the default random provided"}),"\n",(0,o.jsxs)(n.p,{children:["To make it easy to get started, some randomly generated values are provided in the default configuration. But if you're really going to be using museum, please generate new keys. You can use ",(0,o.jsx)(n.code,{children:"go run tools/gen-random-keys/main.go"})," for that. Refer ",(0,o.jsx)(n.a,{href:"https://github.com/ente-io/ente/blob/74377a93d8e20e969d9a2531f32f577b5f0ef090/server/configurations/local.yaml#L188",children:"here"})," for more details"]}),"\n",(0,o.jsx)(n.p,{children:"Add this to scripts/compose/credentials.yaml file"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"key:\n    encryption: \n    hash: \n\njwt:\n    secret: \n"})}),"\n",(0,o.jsx)(n.h4,{id:"hard-coded-otp",children:"Hard-coded OTP"}),"\n",(0,o.jsx)(n.p,{children:"You can hard-code the OTP that gets sent to the first user account so that you don't require to review the logs to get them.\nAdd this to scripts/compose/credentials.yaml file"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'internal:\n    silent: false\n    health-check-url:\n    hardcoded-ott:\n        emails:\n            - "example@example.org,123456"\n    #     # When running in a local environment, hardcode the verification code to\n    #     # 123456 for email addresses ending with @example.org\n        local-domain-suffix: "@example.org"\n        local-domain-value: 123456\n    # List of user IDs that can use the admin API endpoints.\n    # If this is not set, as a fallback, the first user is considered an admin.\n    admins: []\n'})}),"\n",(0,o.jsx)(n.h4,{id:"increase-storage-space-for-the-users",children:"Increase storage space for the users"}),"\n",(0,o.jsx)(n.p,{children:"By default, users will have only the 5GB quota assoicated with the free plan.\nIn self-hosting environment such as ours, we can custom set the quota for the users."}),"\n",(0,o.jsx)(n.p,{children:"This procedure is bit an overhead as of now, but we would need to do this procedure only a couple of times or maybe just once."}),"\n",(0,o.jsx)(n.p,{children:"There are binaries available to install and run it from your local desktop/laptop or you can do this procedure in the same raspberry host."}),"\n",(0,o.jsx)(n.p,{children:"First, we have to configure ente-cli administration tool"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Build docker image from Github source"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"# mkdir ente-cli && cd ente-cli\n# git clone https://github.com/ente-io/ente\n\n> Goto cli folder\n>  # cd cli\n>  Modify the docker-compose.yml and add volume. cli-data volume is mandatory, you can add more volumes for your export directory.\n\n# docker-compose up -d --build\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"We need to get  CLI to connect to the custom museum server.\nDefine a config.yaml and put it either in the same directory as CLI or inside the container"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'docker exec -it cli-ente-cli-1 /bin/sh\n\nvi config.yaml\n  endpoint:\n    api: "http://<IP>:8080"\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Add the existing user as an admin account."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"# ./ente-cli account add\nEnter app type (default: photos):\nUse default app type: photos\nEnter export directory: data\nEnter email address: example@example.org\nEnter password:\nPlease wait authenticating...\nAccount added successfully\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Get the ID of the user"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"# ./ente-cli account list\nConfigured accounts: 1\n====================================\nEmail:     example@example.org\nID:        1580559962386438\nApp:       photos\nExportDir: data\n====================================\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Add the ID to scripts/compose/credentials.yaml file we used to compose the museum server"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'internal:\n    silent: false\n    health-check-url:\n    hardcoded-ott:\n        emails:\n            - "example@example.org,123456"\n    #     # When running in a local environment, hardcode the verification code to\n    #     # 123456 for email addresses ending with @example.org\n        local-domain-suffix: "@example.org"\n        local-domain-value: 123456\n    # List of user IDs that can use the admin API endpoints.\n    # If this is not set, as a fallback, the first user is considered an admin.\n    admins:\n      - 1580559962386438\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Restart the museum container or redo docker-compose"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Increase the Quota for the user from ente-cli container"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"# ./ente-cli admin update-subscription -a example@example.org -u example@example.org --no-limit False\n\n  Enter a storage size (e.g.'5MB', '10GB', '2Tb'): : 100GB\n  Enter sub expiry date in YYYY-MM-DD format  (e.g.'2040-12-31'): 2040-12-31\n  Updating storage for user example@example.org to 100.0 GB (old 5.0 GB) with new expirty 2040-12-31 (old 2124-11-15)\n  Are you sure you want to update the storage ('y' or 'n')?: y\n  Successfully updated storage and expiry date for user\n"})}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);